#summary Appunti

= Installazione e configurazione iniziale =

== Installazione dei file del progetto ==

  * seguire le indicazioni su http://www.symfony-project.org/getting-started/1_4/en/02-Prerequisites

  * cambiare i file _/etc/php5/cli/php.ini_ e _/etc/php5/apache2/php.ini_ (short_open_tag e magic_quotes_gpg)

  * installare php-apc

  * creare una directory _var/wviola_ (o equivalente)

Scaricare i file del progetto via svn:

{{{
svn checkout http://wviola.googlecode.com/svn/trunk/ /var/wviola
}}}

Nota: vengono scaricati sia i file del progetto _wviola_ sia quelli del framework _symfony_.

Dare il comando:
{{{
php /var/wviola/web/check_configuration.php
}}}

Si dovrebbe ottenere il seguente output:

{{{
********************************
*                              *
*  symfony requirements check  *
*                              *
********************************

php.ini used by PHP: /etc/php5/cli/php.ini

** WARNING **
*  The PHP CLI can use a different php.ini file
*  than the one used with your web server.
*  If this is the case, please launch this
*  utility from your web server.
** WARNING **

** Mandatory requirements **

  OK        PHP version is at least 5.2.4 (5.2.10-2ubuntu6.4)

** Optional checks **

  OK        PDO is installed
  OK        PDO has some drivers installed: mysql, odbc, pgsql, sqlite, sqlite2
  OK        PHP-XML module is installed
  OK        XSL module is installed
  OK        The token_get_all() function is available
  OK        The mb_strlen() function is available
  OK        The iconv() function is available
  OK        The utf8_decode() is available
  OK        A PHP accelerator is installed
  OK        php.ini has short_open_tag set to off
  OK        php.ini has magic_quotes_gpc set to off
  OK        php.ini has register_globals set to off
  OK        php.ini has session.auto_start set to off
  OK        PHP version is not 5.2.9
}}}

Visitare con il browser la pagina web (ovviamente l'URL varia a seconda della configurazione):

{{{
http://www.wviola.net.localhost/check_configuration.php
}}}

Si dovrebbe ottenere un output come questo:

{{{
********************************
*                              *
*  symfony requirements check  *
*                              *
********************************

php.ini used by PHP: /etc/php5/apache2/php.ini


** Mandatory requirements **

  OK        PHP version is at least 5.2.4 (5.2.10-2ubuntu6.4)

** Optional checks **

  OK        PDO is installed
  OK        PDO has some drivers installed: mysql, odbc, pgsql, sqlite, sqlite2
  OK        PHP-XML module is installed
  OK        XSL module is installed
  OK        The token_get_all() function is available
  OK        The mb_strlen() function is available
  OK        The iconv() function is available
  OK        The utf8_decode() is available
  OK        A PHP accelerator is installed
  OK        php.ini has short_open_tag set to off
  OK        php.ini has magic_quotes_gpc set to off
  OK        php.ini has register_globals set to off
  OK        php.ini has session.auto_start set to off
  OK        PHP version is not 5.2.9
}}}

Controllo della versione di symfony:

{{{
php /var/wviola/lib/vendor/symfony/data/bin/symfony -V
symfony version 1.4.0 (/var/wviola/lib/vendor/symfony/lib)
}}}

== Configurazione personalizzata ==

Tutti i file soggetti a configurazione personalizzata vengono forniti con il suffisso _-dist_. Essi devono essere copiati con lo stesso nome, senza il suffisso, in modo che non vengano sovrascritti in occasione degli aggiornamenti.

Esempio:

{{{
$ find . -name '*-dist'
./apps/frontend/config/app.yml-dist
./config/databases.yml-dist

...

cp config/frontend/config/app.yml-dist config/frontend/config/app.yml
cp config/databases.yml-dist config/databases.yml
}}}


=== Accesso al database ===

Per l'accesso al database va modificato il file _config/databases.yml_:

{{{
dev:
  propel:
    param:
      classname: DebugPDO
test:
  propel:
    param:
      classname: DebugPDO
all:
  propel:
    class: sfPropelDatabase
    param:
      classname: PropelPDO
      dsn: 'pgsql:host=localhost;port=5432;dbname=wviola'
      username: wviola
      password: superSekret
      encoding: utf8
      persistent: true
      pooling: true
}}}

Nota: si tratta di un file YAML (vedi http://www.yaml.org/) e le indentazioni sono fatte con spazi, non con tabulatori.

Creare il database con il nome preferito, dare ad un utente i privilegi necessari perché possa lavorarci e infine cambiare la configurazione come necessario.

=== Predisposizione delle tabelle ===

Per la predisposizione delle tabelle c'è un task apposito:

{{{
cd /var/wviola
$ php symfony propel:insert-sql
}}}

Si dovrebbe ottenere un output come questo:

{{{
>> schema    converting "/var/wviola/config/schema.yml" to XML
>> schema    putting /var/wviola/config/generated-schema.xml
>> schema    converting "/var/wviola/plugins/...Plugin/config/schema.yml" to XML
>> schema    putting /var/wviola/plugins/sfGu...nerated-sfGuardPlugin-schema.xml
>> file+     config/generated-sfGuardPlugin-schema.xml
>> file-     /var/wviola/plugins/sfGuardPlugi...nerated-sfGuardPlugin-schema.xml
                                                                    
  WARNING: The data in the database related to the connection name  
           propel will be removed.                                  
                                                                    
  Are you sure you want to proceed? (y/N)                           
                                                                    
y
>> propel    Running "insert-sql" phing task
>> file-     /var/wviola/config/generated-schema.xml
>> file-     /var/wviola/config/generated-sfGuardPlugin-schema.xml
}}}

Nota: i database potrebbero essere diversi per i tre ambienti di sviluppo, di produzione e di test. In questa fase non vale la pena di complicarci la vita, visto che tutto sarà test.

L'inserimento di alcuni dati di prova può avvenire con il comando

{{{
cd /var/wviola
php symfony propel:data-load
}}}

=== Configurazione dell'applicazione ===

La configurazione di base dell'applicazione web si fa agendo sul file _apps/frontend/config/app.yml_. In particolare, per quanto riguarda l'autenticazione, si potrà fare in modo che l'autenticazione avvenga via LDAP togliendo gli hash dal file e modificando opportunamente le voci `ldap_host` e `ldap_domain`.

{{{
all:
  config:
    organization: My Organization Name
    website: http://www.example.com

#  sf_guard_plugin:
#    check_password_callable: [Authentication, checkLdapPassword]

#  authentication:
#    ldap_host: localhost
#    ldap_domain: dc=example,dc=com
}}}

Nota: l'autenticazione avverrà via LDAP, ma i nomi degli utenti devono essere presenti comunque nel DB di wviola. Si può pensare ad un task da eseguire periodicamente per sincronizzare i dati.