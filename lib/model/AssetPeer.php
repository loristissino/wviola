<?php

#require 'lib/model/om/BaseAssetPeer.php';


/**
 * Skeleton subclass for performing query and update operations on the 'asset' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.0 on:
 *
 * Wed Feb  3 19:07:27 2010
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class AssetPeer extends BaseAssetPeer {

	public static function retrieveByUniqid($uniqid)
	{
		$c=new Criteria();
		$c->add(AssetPeer::UNIQID, $uniqid);
		return AssetPeer::doSelectOne($c);
	}

	public static function retrieveBySourceSizeAndMd5sum($size, $md5sum)
	{
		$c=new Criteria();
		$c->add(AssetPeer::SOURCE_SIZE, $size);
		$c->add(AssetPeer::SOURCE_LMD5SUM, $md5sum);
		return AssetPeer::doSelectOne($c);
	}
  
  public static function doDeleteAll($con = null)
  {
    if (file_exists($index = Generic::getLuceneIndexFile('asset')))
    {
      sfToolkit::clearDirectory($index);
      rmdir($index);
    }
   
    return parent::doDeleteAll($con);
  }


  public static function getLuceneIndex()
  {
    return Generic::getLuceneIndex('asset');
  }
  
  static public function getForLuceneQuery($query)
  {
    try
    {
      $hits = self::getLuceneIndex()->find($query);
    }
    catch (Exception $e)
    {
      return array();
    }
    
    $pks = array();
    foreach ($hits as $hit)
    {
      $pks[] = $hit->pk;
    }
   
    $c = new Criteria();
    $c->add(self::ID, $pks, Criteria::IN);
    $c->setLimit(20);
   
    return self::doSelect($c);
  }

} // AssetPeer
