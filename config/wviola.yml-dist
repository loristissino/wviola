# *** IMPORTANT NOTE ***
# You'll need to regenerate the scripts for assets publication after changing
# these settings

directory:
  published_assets: /var/wviola/data/filesystem/published/assets
  # where published assets are kept

  published_thumbnails: /var/wviola/data/filesystem/published/thumbnails
  # where thumbnails of published assets are kept

  scheduled: /var/wviola/data/filesystem/scheduled
  # where files to be published are kept

  sources:  /var/wviola/data/filesystem/sources
  # where the user will browse files to publish (by using the web app)

  iso_cache:  /var/wviola/data/filesystem/iso_images/cache
  # where encoded file to be burn into a DVD are kept

  iso_images: /var/wviola/data/filesystem/iso_images/done
  # where iso images ready for burning are kept

  trash: /var/wviola/data/filesystem/trash
  # where original source files are moved after beeing encoded

  executables: /var/wviola/lib/wviola/bin
  # where common utilities are to be found
  
  lucene_index: /var/wviola/data
  # where Lucene index binary files will be put
  # since different indexes may be built, we'll get different subdirectories 
  # like /var/wviola/data/foo_prod.index/, /var/wviola/data/bar_prod.index/,
  # and so on (the names are made up with the object indexed and the environment)

  logs: /var/wviola/log
  
#  tmp: /tmp/wviola
  # leave this commented if you want to use your system standard tmp directory


thumbnail:
  number: 8
  # number of thumbnails to prepare for each asset (videos and photoalbums)  
  width: 60
  height: 45
  # the size of the thumbnail to prepare 
    
  photoalbum_reduction: 5
  # photoalbum pictures previews will be shown reduced by this factor

publishing:
# available placeholders are:
#   %source%
#   %target%
#   %width%
#   %height%
#   %artist%
#   %title%
#   %date%
#   %location%
#   %organization%
#   %copyright%
#   %license%
#   %contact%

  video_width: 320
  video_height: 240
  video_low_quality_command: ffmpeg -y -i "%source%" -ar 22050 -ab 32000 -f flv -s %width%x%height% "%target%"
  video_high_quality_command: ffmpeg2theora --videoquality 8 -o "%target%" "%source%"
  video_low_quality_extension: .flv
  video_high_quality_extension: .ogv
  picture_low_quality_width: 640
  picture_low_quality_height: 480
  picture_low_quality_jpeg_quality: 75
  picture_high_quality_width: 800
  picture_high_quality_height: 600
  picture_high_quality_jpeg_quality: 90
  picture_low_quality_command: convert "%source%" -scale %width%x%height% -quality %quality% "%target%"
  picture_high_quality_command: convert "%source%" -scale %width%x%height% -quality %quality% "%target%"
  photoalbum_low_quality_extension: .zip
  photoalbum_high_quality_extension: .zip
  audio_preexecution_command: mplayer "%source%" -ao pcm:file="$TEMPFILE" -vc dummy -vo null &
  audio_low_quality_command: lame -q 2 -V 4 "$TEMPFILE" "%target%"
  audio_high_quality_command: oggenc -q 5 -b 256 "$TEMPFILE" -o "%target%"
  audio_low_quality_extension: .mp3
  audio_high_quality_extension: .ogg

  extensions_used: [ '', '.flv', '.ogg', '.ogv', '.mp3', '.zip' ]
  # this is useful because when we look for a file we could try with a different
  # extension




filebrowser:
  md5sum_limit: f
  photoalbum_items: [ '/jpg$/i', '/jpeg$/i', '/png$/i' ]
  # files with these extensions (regexp) are grouped in a zip file as a photoalbum
  white_list: [ '/mov$/i', '/mpeg$/i', '/mpg$/i', '/avi$/i', '/mp4$/i', '/ogv$/i', '/zip$/i' ]
  # regular expressions to use with filenames: only files matching are scanned
  info_user: mark
  info_group: www-data
  info_perms_dir: 0770
  info_perms_file: 0660
  # owner and permissions for info file generated by the scan-sources task

  path_replacements:
  # these may be useful in case of mapping to UNC paths
    '/\/var\/wviola\/data\/filesystem/': '//myserver/myshare'
    '/\//': '\'

  file_being_copied_check_waittime: 2
  # the number of seconds to wait before checking if the file size is different
  file_being_copied_check_showinfo: true
  # whether you want information being displayed during scan-sources task
  
  makethumbnail_command: false # /usr/local/bin/makethumbnail
  # the script you want to use to extract thumbnails from video sources
  # leave commented or set to false if you want to use the provided one
  # WARNING: avoid spaces in the path of the command

binders:
  years_before: 5
  years_after: 0
  externaldbdatasource_command: /etc/wviola/externaldb.sh "%code%" "%year%/%month%/%day%" "%user%"
  # this must be an external program or script that outputs the suggested title to the standard output,
  # or exits with non zero status if the code is not found
  # example:
# #!/bin/bash
# CODE="$1"
# DATE="$2"
# USER="$3"
# 
# # Please note that this script is used both for data retrieval and for code validation,
# # but, when it is called for validation, only the code is actually passed as parameter,
# 
# if [ $CODE -eq 123 ]; then
#   echo "Title hint for code $CODE, date=$DATE, user=$USER"
#   exit 0
# else
#   exit 1
# fi  

archiviation:
  binder_max_age: 30
  # days after which a binder should be automatically closed
  iso_image_size: 4480
  # iso dvd image size, in MiB
  # please notice that the files listed in the extra_files field (below) are NOT
  # taken into account (so you should subtract their size from the value above)
  index_template: /var/wviola/templates/isoimage/it/isoindex.php
  index_title: Raccoglitori archiviati il %date%
  extra_files: [ /var/wviola/templates/isoimage/it/autorun.inf ]

  location: Nowhere
  organization: Example Organization
  copyright: Nobody
  license: Creative Commons Attribution 2.5 Generic http://creativecommons.org/licenses/by/2.5/
  contact: wviola@example.com
  notice_to: mark
  
  folder_name_schema: binder%d
  # %d is replaced by the id of the folder
  # be sure to change the index_template accordingly

  post_iso_generation_command: dvdisaster -mRS02 -n dvd -c -i %isoimage%
  # the command to execute after iso generation
  # set to false if you do not want anything to be executed

mail:
  bot_address: wviola@example.com
  bot_name: WVIOLA bot
  sourcesready_template: /var/wviola/templates/email/it/sourcesready.yml
  sourceswaiting_template: /var/wviola/templates/email/it/sourceswaiting.yml
  archiveready_template: /var/wviola/templates/email/it/archiveready.yml

  # configuration for sending mail out is in the apps/frontend/config/factories.yml file
  
web:
  frontend_url: http://wviola.example.com/index.php
  backend_url: http://wviola.example.com/backend.php

search:
  max_results: 30
  # the maximum number of results for lucene query searches

debug:
  active: false
  # if set to true, all external commands calls will be logged into log/wviolalog.txt
  
tasks:
  list_delimiter: ":"
